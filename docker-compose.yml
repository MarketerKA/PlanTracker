version: '3.8'

# Create a .env file with the following variables:
# GITHUB_REPOSITORY=your-username/PlanTracker
# SECRET_KEY=your_secret_key
# TELEGRAM_BOT_TOKEN=your_telegram_bot_token

services:
  backend:
    image: ghcr.io/marketerka/plantracker/backend:latest
    container_name: plantracker-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/plantracker
      - SECRET_KEY=your-secret-key
      - ALLOWED_HOSTS=158.160.23.164
      - CORS_ALLOWED_ORIGINS=https://158.160.23.164
    volumes:
      - backend_data:/app/data
    networks:
      - plantracker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: ghcr.io/marketerka/plantracker/frontend:latest
    container_name: plantracker-frontend
    restart: unless-stopped
    expose:
      - "80"
      - "8080"
    networks:
      - plantracker-network

  nginx:
    image: nginx:latest
    container_name: plantracker-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - plantracker-network
    depends_on:
      - frontend
      - backend

  db:
    image: postgres:latest
    container_name: plantracker-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=plantracker
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - plantracker-network

networks:
  plantracker-network:
    driver: bridge

volumes:
  backend_data:
  postgres_data: 