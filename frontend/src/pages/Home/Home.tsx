import { FC, useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import styles from './Home.module.scss';
import { Header, Button, TaskStats } from '../../components';
import { useActivities } from '../../hooks/useActivities';
import { ROUTES } from '../../routes';

export interface HomeProps {}

export const Home: FC<HomeProps> = () => {
  const navigate = useNavigate();
  const { tasks, loading, fetchTasks } = useActivities();
  const [stats, setStats] = useState({
    total: 0,
    completed: 0,
    inProgress: 0,
    withTimer: 0
  });

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∑–∞–¥–∞—á –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    fetchTasks();
  }, [fetchTasks]);

  useEffect(() => {
    // –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    if (tasks.length > 0) {
      const completedTasks = tasks.filter(task => task.completed).length;
      const tasksWithTimer = tasks.filter(task => task.timerStatus === 'running' || task.timerStatus === 'paused').length;
      
      setStats({
        total: tasks.length,
        completed: completedTasks,
        inProgress: tasks.length - completedTasks,
        withTimer: tasksWithTimer
      });
    }
  }, [tasks]);

  const handleGoToTasks = () => {
    navigate(ROUTES.TASKS);
  };

  return (
    <div className={styles.pageWrapper}>
      <Header />
      <main className={styles.main}>
        <div className={styles.container}>
          <h1 className={styles.title}>–ü–ª–∞–Ω <span>–¢—Ä–µ–∫–µ—Ä</span></h1>
          <p className={styles.subtitle}>
            –£–¥–æ–±–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
          </p>

          {loading ? (
            <div className={styles.loading}>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
          ) : (
            <>
              {tasks.length > 0 ? (
                <div className={styles.statsSection}>
                  <TaskStats 
                    total={stats.total}
                    completed={stats.completed}
                    inProgress={stats.inProgress}
                    withTimer={stats.withTimer}
                  />
                </div>
              ) : (
                <div className={styles.emptyState}>
                  <div className={styles.emptyIcon}>üìã</div>
                  <h2>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞—á</h2>
                  <p>–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –∑–∞–¥–∞—á—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ</p>
                </div>
              )}

              <div className={styles.actions}>
                <Button onClick={handleGoToTasks} variant="primary">
                  {tasks.length > 0 ? '–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞—á–∞–º' : '–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É'}
                </Button>
              </div>
            </>
          )}
        </div>
      </main>
    </div>
  );
};